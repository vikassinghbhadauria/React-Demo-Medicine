{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ravi\\\\Desktop\\\\Self Learning\\\\Medicine\\\\01-starting-project\\\\src\\\\components\\\\Medicine\\\\AvailableMedicine.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport classes from './AvailableMedicine.module.css';\nimport MedicineItem from './MedicineItem/MedicineItem';\nimport Card from '../UI/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMedicine = () => {\n  _s();\n\n  const [medicine, setMedicine] = useState([]);\n  useEffect(() => {\n    const fetchMedicine = async () => {\n      const response = await fetch('https://medicinedatamart-default-rtdb.firebaseio.com/medicine.json');\n      const responseData = await response.json();\n      const loadedMedicine = [];\n\n      for (const key in responseData) {\n        loadedMedicine.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMedicine(loadedMedicine);\n    };\n\n    fetchMedicine();\n  }, []);\n  const medicineList = medicine.map(medicine => /*#__PURE__*/_jsxDEV(MedicineItem, {\n    id: medicine.id,\n    name: medicine.name,\n    description: medicine.description,\n    price: medicine.price\n  }, medicine.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.medicine,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: medicineList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 11\n  }, this);\n};\n\n_s(AvailableMedicine, \"R2PD80fZWQLcZwiuplShaZF4kJM=\");\n\n_c = AvailableMedicine;\nexport default AvailableMedicine;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMedicine\");","map":{"version":3,"sources":["C:/Users/Ravi/Desktop/Self Learning/Medicine/01-starting-project/src/components/Medicine/AvailableMedicine.js"],"names":["useEffect","useState","classes","MedicineItem","Card","AvailableMedicine","medicine","setMedicine","fetchMedicine","response","fetch","responseData","json","loadedMedicine","key","push","id","name","description","price","medicineList","map"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;;AAGE,MAAMC,iBAAiB,GAAE,MAAI;AAAA;;AAC3B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMQ,aAAa,GAAG,YAAU;AAC9B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oEAAD,CAA5B;AACA,YAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;AAEA,YAAMC,cAAc,GAAG,EAAvB;;AACA,WAAK,MAAMC,GAAX,IAAkBH,YAAlB,EAA+B;AAC7BE,QAAAA,cAAc,CAACE,IAAf,CAAoB;AAClBC,UAAAA,EAAE,EAACF,GADe;AAElBG,UAAAA,IAAI,EAAEN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFN;AAGlBC,UAAAA,WAAW,EAAGP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHd;AAIlBC,UAAAA,KAAK,EAAER,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJP,SAApB;AAMD;;AACDZ,MAAAA,WAAW,CAACM,cAAD,CAAX;AACD,KAdD;;AAgBAL,IAAAA,aAAa;AACd,GAlBQ,EAkBP,EAlBO,CAAT;AAoBE,QAAMY,YAAY,GAAGd,QAAQ,CAACe,GAAT,CAAaf,QAAQ,iBAC1C,QAAC,YAAD;AACE,IAAA,EAAE,EAAEA,QAAQ,CAACU,EADf;AAGE,IAAA,IAAI,EAAEV,QAAQ,CAACW,IAHjB;AAIE,IAAA,WAAW,EAAEX,QAAQ,CAACY,WAJxB;AAKE,IAAA,KAAK,EAAEZ,QAAQ,CAACa;AALlB,KAEOb,QAAQ,CAACU,EAFhB;AAAA;AAAA;AAAA;AAAA,UADqB,CAArB;AAUA,sBACI;AAAS,IAAA,SAAS,EAAEd,OAAO,CAACI,QAA5B;AAAA,2BACI,QAAC,IAAD;AAAA,6BACA;AAAA,kBAAKc;AAAL;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAxCD;;GAAMf,iB;;KAAAA,iB;AA0CN,eAAeA,iBAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nimport classes from './AvailableMedicine.module.css';\r\nimport MedicineItem from './MedicineItem/MedicineItem';\r\nimport Card from '../UI/Card';\r\n\r\n\r\n  const AvailableMedicine =()=>{\r\n    const [medicine, setMedicine]=useState([]);\r\n\r\n    useEffect(()=>{\r\n      const fetchMedicine = async ()=>{\r\n        const response = await fetch('https://medicinedatamart-default-rtdb.firebaseio.com/medicine.json');\r\n        const responseData = await response.json();\r\n\r\n        const loadedMedicine = [];\r\n        for (const key in responseData){\r\n          loadedMedicine.push({\r\n            id:key,\r\n            name: responseData[key].name,\r\n            description : responseData[key].description,\r\n            price: responseData[key].price\r\n          });\r\n        }\r\n        setMedicine(loadedMedicine);\r\n      };\r\n     \r\n      fetchMedicine();\r\n    },[]);\r\n\r\n      const medicineList = medicine.map(medicine => (\r\n      <MedicineItem \r\n        id={medicine.id}\r\n        key={medicine.id} \r\n        name={medicine.name} \r\n        description={medicine.description}\r\n        price={medicine.price}\r\n        />\r\n        ));\r\n\r\n      return(\r\n          <section className={classes.medicine}>\r\n              <Card>\r\n              <ul>{medicineList}</ul>\r\n              </Card>\r\n          </section>\r\n      );\r\n  }\r\n\r\n  export default AvailableMedicine;"]},"metadata":{},"sourceType":"module"}